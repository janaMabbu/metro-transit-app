// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Component - DropDown should render the DropDown snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <DropDown
    context="routes"
    default="default"
    onChange={[MockFunction]}
    options={
      Immutable.List [
        Immutable.Map {
          "RouteId": "1",
          "Description": "Description",
        },
        Immutable.Map {
          "RouteId": "2",
          "Description": "Description11",
        },
        Immutable.Map {
          "RouteId": "3",
          "Description": "Description22",
        },
      ]
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <select
        className="metro-app__dropdown"
        onChange={[MockFunction]}
      >
        <option
          className="metro-app__dropdown-item"
        >
          default
        </option>
        Immutable.List [
          <option
            className="metro-app__dropdown-item"
            value="1"
          >
            Description
          </option>,
          <option
            className="metro-app__dropdown-item"
            value="2"
          >
            Description11
          </option>,
          <option
            className="metro-app__dropdown-item"
            value="3"
          >
            Description22
          </option>,
        ]
      </select>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <option
            className="metro-app__dropdown-item"
          >
            default
          </option>,
          Immutable.List [
            <option
              className="metro-app__dropdown-item"
              value="1"
            >
              Description
            </option>,
            <option
              className="metro-app__dropdown-item"
              value="2"
            >
              Description11
            </option>,
            <option
              className="metro-app__dropdown-item"
              value="3"
            >
              Description22
            </option>,
          ],
          false,
        ],
        "className": "metro-app__dropdown",
        "onChange": [MockFunction],
        "value": undefined,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "default",
            "className": "metro-app__dropdown-item",
          },
          "ref": null,
          "rendered": "default",
          "type": "option",
        },
        Object {
          "instance": null,
          "key": "1",
          "nodeType": "host",
          "props": Object {
            "children": "Description",
            "className": "metro-app__dropdown-item",
            "value": "1",
          },
          "ref": null,
          "rendered": "Description",
          "type": "option",
        },
        Object {
          "instance": null,
          "key": "2",
          "nodeType": "host",
          "props": Object {
            "children": "Description11",
            "className": "metro-app__dropdown-item",
            "value": "2",
          },
          "ref": null,
          "rendered": "Description11",
          "type": "option",
        },
        Object {
          "instance": null,
          "key": "3",
          "nodeType": "host",
          "props": Object {
            "children": "Description22",
            "className": "metro-app__dropdown-item",
            "value": "3",
          },
          "ref": null,
          "rendered": "Description22",
          "type": "option",
        },
        false,
      ],
      "type": "select",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <select
          className="metro-app__dropdown"
          onChange={[MockFunction]}
        >
          <option
            className="metro-app__dropdown-item"
          >
            default
          </option>
          Immutable.List [
            <option
              className="metro-app__dropdown-item"
              value="1"
            >
              Description
            </option>,
            <option
              className="metro-app__dropdown-item"
              value="2"
            >
              Description11
            </option>,
            <option
              className="metro-app__dropdown-item"
              value="3"
            >
              Description22
            </option>,
          ]
        </select>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <option
              className="metro-app__dropdown-item"
            >
              default
            </option>,
            Immutable.List [
              <option
                className="metro-app__dropdown-item"
                value="1"
              >
                Description
              </option>,
              <option
                className="metro-app__dropdown-item"
                value="2"
              >
                Description11
              </option>,
              <option
                className="metro-app__dropdown-item"
                value="3"
              >
                Description22
              </option>,
            ],
            false,
          ],
          "className": "metro-app__dropdown",
          "onChange": [MockFunction],
          "value": undefined,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "default",
              "className": "metro-app__dropdown-item",
            },
            "ref": null,
            "rendered": "default",
            "type": "option",
          },
          Object {
            "instance": null,
            "key": "1",
            "nodeType": "host",
            "props": Object {
              "children": "Description",
              "className": "metro-app__dropdown-item",
              "value": "1",
            },
            "ref": null,
            "rendered": "Description",
            "type": "option",
          },
          Object {
            "instance": null,
            "key": "2",
            "nodeType": "host",
            "props": Object {
              "children": "Description11",
              "className": "metro-app__dropdown-item",
              "value": "2",
            },
            "ref": null,
            "rendered": "Description11",
            "type": "option",
          },
          Object {
            "instance": null,
            "key": "3",
            "nodeType": "host",
            "props": Object {
              "children": "Description22",
              "className": "metro-app__dropdown-item",
              "value": "3",
            },
            "ref": null,
            "rendered": "Description22",
            "type": "option",
          },
          false,
        ],
        "type": "select",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
